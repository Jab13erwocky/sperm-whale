version: '3'

services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password

  redis:
    image: 'redis:latest'

  nginx:
    restart: always
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/nginx
    build:
      context: ./nginx
    ports:
      - '4000:80'

  api:
    build:
      context: ./server
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/server
    volumes:
      - /appServer/node_modules
      - ./server:/appServer
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432

  client:
    build: 
      context: ./client
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/client
    volumes:
      - /appClient/node_modules
      - ./client:/appClient
    environment:
      - WDS_SOCKET_PORT=0
  
  worker:
    build:
      context: ./worker
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/worker
    volumes:
      - /appWorker/node_modules
      - ./worker:/appWorker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
